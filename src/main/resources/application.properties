spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka
spring.kafka.consumer.enable-auto-commit=true
auto.commit.interval.ms=8000
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.properties.schema.registry.url=${REGISTRY_URL}
campaign=${KAFKA_CAMPAIGN_TOPIC}
outbound=${KAFKA_OUTBOUND_TOPIC}
telemetry=${KAFKA_TELEMETRY_TOPIC}
inboundUnprocessed=${KAFKA_INBOUND_UNPROCESSED_TOPIC}
inboundProcessed=${KAFKA_INBOUND_PROCESSED_TOPIC}
gupshup-opted-out=${KAFKA_INBOUND_GS_OPTED_OUT_TOPIC}
inbound-error=${KAFKA_INBOUND_ERROR_TOPIC}
odk-transformer=${KAFKA_ODK_TRANSFORMER_TOPIC}
odk-topic-pattern=${KAFKA_ODK_TRANSFORMER_TOPIC_PATTERN}

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.r2dbc.url=r2dbc:postgresql://${FORMS_DB_HOST}:${FORMS_DB_PORT}/${FORMS_DB_NAME}
postgresql.db.host=${FORMS_DB_HOST}
postgresql.db.port=${FORMS_DB_PORT}
spring.r2dbc.name=${FORMS_DB_NAME}
spring.r2dbc.username=${FORMS_DB_USERNAME}
spring.r2dbc.password=${FORMS_DB_PASSWORD}
spring.r2dbc.initialization-mode=always

#liquibase configuration
spring.liquibase.change-log=classpath:db/changelog-master.xml
spring.liquibase.enabled=true
spring.liquibase.user=${FORMS_DB_USERNAME}
spring.liquibase.password=${FORMS_DB_PASSWORD}
spring.liquibase.url=jdbc:postgresql://${FORMS_DB_HOST}:${FORMS_DB_PORT}/${FORMS_DB_NAME}

server.port=9091

provider.list=gupshup.whatsapp

db-scheduler.threads=5
db-scheduler.polling-interval=5s

external.services.url-shortnr.baseURL=http://localhost:8888
campaign.url = ${CAMPAIGN_URL}
campaign.admin.token = ${CAMPAIGN_ADMIN_TOKEN}

fusionauth.url = ${FUSIONAUTH_URL}
fusionauth.key = ${FUSIONAUTH_KEY}


odk.username = ${ODK_USER}
odk.password = ${ODK_PASS}
odk.url = ${ODK_URL}

producer.id = "transformer"
logging.level.root=INFO

odk.should-add-media = true

# log4j2 log topic config
kafka.logs.topic=${KAFKA_LOGS_TOPIC}

spring.devtools.restart.enabled = false

# assesment answer comparison characters
assesment.character.go_to_start=${ASSESSMENT_GO_TO_START_CHAR:#{*}}
assesment.character.one_level_up=${ASSESSMENT_ONE_LEVEL_UP_CHAR:#{#}}

